rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && request.auth.token.admin == true;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Bookings
    match /bookings/{bookingId} {
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      allow read: if isAdmin() || isOwner(resource.data.userId);
      allow update: if isAdmin();
      allow delete: if isAdmin();
    }

    // Services
    match /services/{serviceId} {
      allow read: if true;  // Public read access
      allow write: if isAdmin();
    }

    // Staff
    match /staff/{staffId} {
      allow read: if true;  // Public read access
      allow write: if isAdmin();
    }

    // Profiles
    match /profiles/{userId} {
      allow read: if isAdmin() || isOwner(userId);
      allow write: if isAdmin() || isOwner(userId);
    }

    // Notifications
    match /notifications/{notificationId} {
      allow read: if isAuthenticated() && (
        resource.data.userId == request.auth.uid || 
        (resource.data.userId == 'admin' && isAdmin())
      );
      allow create: if isAdmin();
      allow update: if isAuthenticated() && (
        resource.data.userId == request.auth.uid || 
        (resource.data.userId == 'admin' && isAdmin())
      );
    }
  }
} 